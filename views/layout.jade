doctype html
html
	head
		meta(charset='utf-8')
		meta(http-equiv='X-UA-Compatible' content='IE=edge')
		meta(name='viewport', content='width=device-width, initial-scale=1')
		link(rel='stylesheet', href='/stylesheets/bootstrap.css')
		link(rel='stylesheet', href='/stylesheets/bootstrap-theme.css')
		link(rel='stylesheet', href='/stylesheets/style.css')
		link(rel='stylesheet', href='/stylesheets/theme.css')
		block headers
			if config && config.site_name
				title= config.site_name
	body
		//- Takes a bootstrap `list-group-item-*` class and an array of messages
		//- Should be explictly put in a ul.list-group like this:
		//-     ul.list-group
		//-         +messages('list-group-item-danger', message_list)
		mixin messages(group_class, message_list)
			if message_list
				each message in message_list
					li.list-group-item(class=group_class) #{message}
		//- Should be explictly put in a ul.list-group like this:
		//-     ul.list-group
		//-         +flash_messages
		mixin flash_messages
			if flash_message_list
				+messages('list-group-item-danger', flash_message_list.error)
				+messages('list-group-item-success', flash_message_list.success)
				+messages('list-group-item-info', flash_message_list.info)
		//- For express-validator errors
		//- Should be explictly put in a ul.list-group like this:
		//-     ul.list-group
		//-         +validation_errors
		mixin validation_errors
			if validation_error_list
				each error in validation_error_list
					li.list-group-item.list-group-item-danger #{error.msg}
		//- This navbar should only be used when `user` is defined.
		//- `user` will be defined automatically by common/ensure_user.js
		mixin game_navbar(active_button)
			.container
				nav.navbar.navbar-inverse(role='navigation')
					.navbar-header
						button.navbar-toggle(type='button', data-toggle='collapse', data-target='#navbar')
							span.sr-only Toggle Navigation
							span.icon-bar
							span.icon-bar
							span.icon-bar
					.collapse.navbar-collapse(id='navbar')
						if user && user.room
							ul.nav.navbar-nav
								- room_url = '/room/' + encodeURIComponent(user.room);
								li(class=(active_button == 'current_game' ? 'active' : ''))
									a(href=room_url) Current Game
							ul.nav.navbar-nav.navbar-right
								li
									a(href='/game/leave_room') Leave Game
						else
							ul.nav.navbar-nav
								li(class=(active_button == 'home' ? 'active' : ''))
									a(href='/game') Home
								li(class=(active_button == 'game_list' ? 'active' : ''))
									a(href='/game/list') Join Game
								li(class=(active_button == 'create' ? 'active' : ''))
									a(href='/game/create') Create Game
								li(class=(active_button == 'deck_editor' ? 'active' : ''))
									a(href='/deck/edit') Edit Decks
							ul.nav.navbar-nav.navbar-right
								li
									if user
										a(href='/user/logout') Logout
									else
										a(href='/user/login') Login

		div(style='margin: 20px;')
			//- Generic modal for scripts to use
			#standard_modal.modal.fade
				.modal-dialog
					.modal-content
						.modal-header
							button.close(type='button', data-dismiss='modal', aria-hidden='true') &times;
							h4.modal-title
						.modal-body
						.modal-footer

			block content

		// Only put the footer if configured
		if config && config.properties.is_configured
			#footer
				.container
					.row
						.col-xs-12
							.flex_container
								.flex_expand
								.flex_noexpand
									ul.list-inline
										li
											a(href='/about') About
										li
											a(href='/contact') Contact
										li
											a(href='/terms') Terms of Service
										li
											a(href='/privacy') Privacy Policy
								.flex_expand

		//- Some config settings need to be available in client javascript.
		//- Only expictly pass in the values we need. We don't want to reveal
		//- things like the database password
		if config
			script
				| var config = {};
				| config.card_icon = !{JSON.stringify(config.card_icon)};
				| config.site_name = !{JSON.stringify(config.site_name)};
				| config.invitations_required = !{JSON.stringify(config.invitations_required)};
				| config.field_sizes = !{JSON.stringify(config.field_sizes)};
				| config.properties = {};
				| config.properties.is_configured = !{JSON.stringify(config.properties.is_configured)};
				| config.card = !{JSON.stringify(config.card)};
				| config.player_timeout = !{JSON.stringify(config.player_timeout)};
		else
			script
				| var config = {};
				| config.properties = {};
				| config.properties.is_configured = false;
		//- If user is defined, expose a few fields to the client Javascript
		if user
			script
				| var current_user = {};
				| current_user.id = !{JSON.stringify(user.id)};
				| current_user.username = !{JSON.stringify(user.username)};
				| current_user.admin = !{JSON.stringify(user.admin)};
				| current_user.superuser = !{JSON.stringify(user.superuser)};

		script(src='/javascripts/polyfills.js')
		script(src='/javascripts/jquery-1.11.3.min.js')
		script(src='/javascripts/bootstrap.min.js')
		block scripts
